/*
 * Copyright (C) by Eduard Maximovich. 2020
 * @link <a href="https://github.com/edwardstock">Profile</a>
 *
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: "de.mannodermaus.android-junit5"

version = "0.0.3"
group = "com.edwardstock.android"

ext {
    buildArtifactName = "input-field"
    buildArtifactVersion = version
    buildArtifactGroup = group

    pomName = "advanced-input-field"
    pomUrl = "https://github.com/edwardstock/advanced-input-field"
    pomScm = {
        connection = "scm:git:git://github.com/edwardstock/advanced-input-field.git"
        url = pomUrl
    }
    pomInceptionYear = "2020"
    pomContributors = {}
    pomDescription = "Android alternative for TextInputLayout with TextInputEditText"
    pomDevelopers = {
        developer {
            id = "edwardstock"
            name = "Eduard Maximovich"
            email = "edwatd.vstock@gmail.com"
            roles = ["owner"]
            timezone = "Europe/Moscow"
        }
    }
    pomLicenses = {
        license {
            name = "MIT"
            url = "https://github.com/edwardstock/advanced-input-field/blob/master/LICENSE"
            distribution = "repo"
        }
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName version

        // 1) Make sure to use the AndroidJUnitRunner, of a subclass of it. This requires a dependency on androidx.test:runner, too!
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 2) Connect JUnit 5 to the runner
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
        debugTest {
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled true
        }
    }

    testBuildType 'debugTest'

    testOptions {
        unitTests.returnDefaultValues = true
        junitPlatform {
            filters {
                includePattern "^(com.edwardstock.inputfield)\$"

                includeTags "slow"
                excludeTags "integration"
            }
            debugFilters {
                includeTags "integration"
            }
        }
    }

    // 4) JUnit 5 will bundle in files with identical paths; exclude them
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.3.0-alpha02'

    implementation 'com.annimon:stream:1.2.1'
    implementation 'com.airbnb.android:paris:1.4.0'
    kapt 'com.airbnb.android:paris-processor:1.4.0'

    // 
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

//    testImplementation 'junit:junit:4.12'
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.0"
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.0"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.0"
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.0.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.0.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
//    androidTestImplementation 'org.awaitility:awaitility:3.1.6'

}

apply from: '../scripts/maven_publish.gradle'